version: "3.7"

volumes:
  kong_data: {}

secrets:
  konga_user_seed:
    file: ./kong/konga-users-seed.js
  konga_kong_node_seed:
    file: ./kong/konga-node-seed.js
  
networks:
  kong-net:

services:

  #######################################
  # Postgres: The database used by Kong
  #######################################
  kong-database:
    image: postgres:9.6
    container_name: kong-postgres
    restart: on-failure
    networks:
      - kong-net
    volumes:
      - kong_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: ${KONG_PG_PASSWORD:-kong}
      POSTGRES_DB: kong
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 30s
      timeout: 30s
      retries: 3

  #######################################
  # Kong database migration
  #######################################
  kong-migration:
    image: ${KONG_DOCKER_TAG:-kong:latest}
    command: kong migrations bootstrap
    networks:
      - kong-net
    restart: on-failure
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_DATABASE: kong
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: ${KONG_PG_PASSWORD:-kong}
    depends_on:
      - kong-database


  #######################################
  # Kong: The API Gateway
  #######################################
  kong:
    image: ${KONG_DOCKER_TAG:-kong:latest}
    restart: on-failure
    networks:
      - kong-net
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_DATABASE: kong
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: ${KONG_PG_PASSWORD:-kong}
      KONG_PROXY_LISTEN: 0.0.0.0:8000
      KONG_PROXY_LISTEN_SSL: 0.0.0.0:8443
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
    depends_on:
      - kong-database
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 10
    ports:
      - "8000:8000"
      - "8001:8001"
      - "8443:8443"
      - "8444:8444"

  kong-setup:
    image: alpine
    networks:
      - kong-net
    volumes:
      - ./kong/setup.sh:/setup.sh
    depends_on:
      - kong
    command: ["sh", "/setup.sh"]

  #######################################
  # Konga database prepare
  #######################################
  konga-prepare:
    image: pantsel/konga:latest
    command: "-c prepare -a postgres -u postgresql://kong:${KONG_PG_PASSWORD:-kong}@kong-database:5432/konga"
    networks:
      - kong-net
    restart: on-failure
    depends_on:
      - kong-database

  #######################################
  # Konga: Kong GUI
  #######################################
  konga:
    image: pantsel/konga:latest
    restart: always
    networks:
      - kong-net   
    secrets:
      - konga_user_seed
      - konga_kong_node_seed
    environment: # DOCS: https://github.com/pantsel/konga/blob/master/README.md
      DB_ADAPTER: postgres
      DB_URI: postgresql://kong:${KONG_PG_PASSWORD:-kong}@kong-database:5432/konga
      NODE_ENV: production
      # NO_AUTH: true # 
      KONGA_SEED_USER_DATA_SOURCE_FILE: /run/secrets/konga_user_seed
      KONGA_SEED_KONG_NODE_DATA_SOURCE_FILE: /run/secrets/konga_kong_node_seed
    depends_on:
      - kong-database
    ports:
      - "1337:1337"

  #######################################
  # Users service
  #######################################
  # users-service-v1:
  #   build: ./microservices/users-service/v1
  #   container_name: users-service-v1
  #   ports:
  #     - '8002:8000'
  #   depends_on:
  #     - konga
  #   networks:
  #     - kong-net